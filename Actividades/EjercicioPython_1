{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Cz0BRjtMT225"
      },
      "outputs": [],
      "source": [
        "#Actividad 2: Diseño de algoritmos en Python\n",
        "# Diego Iván Vázquez García\n",
        "# 2007424\n",
        "# N3"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 1 Desarrolla un algoritmo que le pida al usuario por su nombre y que lo salude\n",
        "#  con su nombre, excepto si se llama “Ana”, “Juan”, y “Pedro”.\n",
        "def saludar():\n",
        "    nombre = input(\"Por favor, ingresa tu nombre: \")\n",
        "\n",
        "    if nombre.lower() in [\"ana\", \"juan\", \"pedro\"]:\n",
        "        print(\"¡Hola! ¡Bienvenido!\")\n",
        "    else:\n",
        "        print(f\"¡Hola {nombre}!\")\n",
        "\n",
        "saludar()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V6acKf7_Um-U",
        "outputId": "4681cac1-f53b-4a16-f2b1-74de4d45cec3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Por favor, ingresa tu nombre: Juan\n",
            "¡Hola! ¡Bienvenido!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2 Desarrolla un algoritmo que por medio de una función, le pida al usuario una\n",
        "#   lista de N elementos y como resultado invierta el sentido de la lista.\n",
        "def invertir_lista():\n",
        "    n = int(input(\"Ingrese la cantidad de elementos en la lista: \"))\n",
        "    lista = []\n",
        "\n",
        "    for i in range(n):\n",
        "        elemento = input(f\"Ingrese el elemento {i + 1}: \")\n",
        "        lista.append(elemento)\n",
        "\n",
        "    lista_invertida = lista[::-1]\n",
        "    return lista_invertida\n",
        "\n",
        "lista_invertida = invertir_lista()\n",
        "print(\"La lista invertida es:\", lista_invertida)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "evqxCW5WVwXX",
        "outputId": "faf95752-0082-48c3-9a35-9156d3732fba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese la cantidad de elementos en la lista: 7\n",
            "Ingrese el elemento 1: 7\n",
            "Ingrese el elemento 2: 6\n",
            "Ingrese el elemento 3: 5\n",
            "Ingrese el elemento 4: 4\n",
            "Ingrese el elemento 5: 3\n",
            "Ingrese el elemento 6: 2\n",
            "Ingrese el elemento 7: 1\n",
            "La lista invertida es: ['1', '2', '3', '4', '5', '6', '7']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 3 Desarrolla un algoritmo que le pregunte al usuario cuántos números de la\n",
        "# serie de Fibonacci quiere generar y que al final los imprima.\n",
        "def fibonacci(n):\n",
        "    fibonacci_series = [0, 1]  # Iniciamos con los primeros dos números de la serie\n",
        "\n",
        "    for i in range(2, n):\n",
        "        fibonacci_series.append(fibonacci_series[-1] + fibonacci_series[-2])\n",
        "\n",
        "    return fibonacci_series\n",
        "\n",
        "def main():\n",
        "    cantidad = int(input(\"Ingrese la cantidad de números de la serie de Fibonacci que desea generar: \"))\n",
        "    if cantidad <= 0:\n",
        "        print(\"Por favor, ingrese un número entero positivo.\")\n",
        "        return\n",
        "\n",
        "    resultado = fibonacci(cantidad)\n",
        "    print(f\"Los primeros {cantidad} números de la serie de Fibonacci son: {resultado}\")\n",
        "\n",
        "main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LxjOfnlukZ8k",
        "outputId": "52da5f51-2f67-4e23-b906-82fb609f9516"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese la cantidad de números de la serie de Fibonacci que desea generar: 4\n",
            "Los primeros 4 números de la serie de Fibonacci son: [0, 1, 1, 2]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 4 Juego de adivinar el número: Crea un programa que genere un número aleatorio\n",
        "#   entre 1 y 100, y luego le pida al usuario que adivine el número. El programa\n",
        "#   debe proporcionar pistas al usuario si el número es mayor o menor que el número\n",
        "#   objetivo, y seguir solicitando un nuevo intento hasta que el usuario adivine correctamente.\n",
        "\n",
        "import random\n",
        "\n",
        "def juego_adivinar_numero():\n",
        "    numero_objetivo = random.randint(1, 100)\n",
        "    intentos = 0\n",
        "\n",
        "    print(\"Bienvenido al juego de adivinar el número. El número está entre 1 y 100.\")\n",
        "\n",
        "    while True:\n",
        "        intento = int(input(\"Por favor, ingresa tu intento: \"))\n",
        "        intentos += 1\n",
        "\n",
        "        if intento < numero_objetivo:\n",
        "            print(\"El número es mayor. ¡Sigue intentando!\")\n",
        "        elif intento > numero_objetivo:\n",
        "            print(\"El número es menor. ¡Sigue intentando!\")\n",
        "        else:\n",
        "            print(f\"Felicidades, ¡adivinaste el número en {intentos} intentos!\")\n",
        "            break\n",
        "\n",
        "juego_adivinar_numero()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tQY8J4r_kyVN",
        "outputId": "9c7f642c-ded8-4528-801d-5393ef3f3b20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bienvenido al juego de adivinar el número. El número está entre 1 y 100.\n",
            "Por favor, ingresa tu intento: 80\n",
            "El número es mayor. ¡Sigue intentando!\n",
            "Por favor, ingresa tu intento: 90\n",
            "Felicidades, ¡adivinaste el número en 2 intentos!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 5 Ejercicio de cálculo de números primos en un rango dado: Escribe un programa\n",
        "#   que solicite al usuario un rango de números y muestre todos los números primos dentro de ese rango.\n",
        "\n",
        "def es_primo(numero):\n",
        "    if numero <= 1:\n",
        "        return False\n",
        "    for i in range(2, int(numero ** 0.5) + 1):\n",
        "        if numero % i == 0:\n",
        "            return False\n",
        "    return True\n",
        "\n",
        "def numeros_primos_en_rango(inicio, fin):\n",
        "    primos = []\n",
        "    for numero in range(inicio, fin + 1):\n",
        "        if es_primo(numero):\n",
        "            primos.append(numero)\n",
        "    return primos\n",
        "\n",
        "def main():\n",
        "    inicio = int(input(\"Ingrese el primer número del rango: \"))\n",
        "    fin = int(input(\"Ingrese el último número del rango: \"))\n",
        "\n",
        "    if inicio > fin:\n",
        "        print(\"El primer número del rango debe ser menor o igual al último número del rango.\")\n",
        "        return\n",
        "\n",
        "    primos_en_rango = numeros_primos_en_rango(inicio, fin)\n",
        "\n",
        "    if primos_en_rango:\n",
        "        print(f\"Los números primos en el rango de {inicio} a {fin} son: {primos_en_rango}\")\n",
        "    else:\n",
        "        print(f\"No se encontraron números primos en el rango de {inicio} a {fin}.\")\n",
        "\n",
        "main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p38rDi6QlT_d",
        "outputId": "0dbc2038-60a4-4097-af1d-7dc5c5f6378a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese el primer número del rango: 5\n",
            "Ingrese el último número del rango: 27\n",
            "Los números primos en el rango de 5 a 27 son: [5, 7, 11, 13, 17, 19, 23]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 6 Ejercicio de implementación\n",
        "#   de una calculadora básica utilizando funciones: Escribe un programa que solicite al usuario dos números\n",
        "#   y realice operaciones básicas como suma, resta, multiplicación y división utilizando funciones separadas para cada operación.\n",
        "def suma(a, b):\n",
        "    return a + b\n",
        "\n",
        "def resta(a, b):\n",
        "    return a - b\n",
        "\n",
        "def multiplicacion(a, b):\n",
        "    return a * b\n",
        "\n",
        "def division(a, b):\n",
        "    if b == 0:\n",
        "        return \"Error: No se puede dividir entre cero.\"\n",
        "    else:\n",
        "        return a / b\n",
        "\n",
        "def main():\n",
        "    try:\n",
        "        num1 = float(input(\"Ingrese el primer número: \"))\n",
        "        num2 = float(input(\"Ingrese el segundo número: \"))\n",
        "    except ValueError:\n",
        "        print(\"Error: Por favor ingrese números válidos.\")\n",
        "        return\n",
        "\n",
        "    print(\"Operaciones disponibles:\")\n",
        "    print(\"1. Suma\")\n",
        "    print(\"2. Resta\")\n",
        "    print(\"3. Multiplicación\")\n",
        "    print(\"4. División\")\n",
        "\n",
        "    opcion = input(\"Seleccione una operación (1/2/3/4): \")\n",
        "\n",
        "    if opcion == '1':\n",
        "        resultado = suma(num1, num2)\n",
        "    elif opcion == '2':\n",
        "        resultado = resta(num1, num2)\n",
        "    elif opcion == '3':\n",
        "        resultado = multiplicacion(num1, num2)\n",
        "    elif opcion == '4':\n",
        "        resultado = division(num1, num2)\n",
        "    else:\n",
        "        print(\"Opción no válida.\")\n",
        "        return\n",
        "\n",
        "    print(f\"El resultado es: {resultado}\")\n",
        "\n",
        "main()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f3TYrrYSlmP0",
        "outputId": "d96ecd01-e649-4765-a874-8c440b90ece7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ingrese el primer número: 5\n",
            "Ingrese el segundo número: 8\n",
            "Operaciones disponibles:\n",
            "1. Suma\n",
            "2. Resta\n",
            "3. Multiplicación\n",
            "4. División\n",
            "Seleccione una operación (1/2/3/4): 3\n",
            "El resultado es: 40.0\n"
          ]
        }
      ]
    }
  ]
}
